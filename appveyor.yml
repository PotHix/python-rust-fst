environment:
  matrix:
    - PYTHON: "C:\\Python27"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python33"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python34"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python35"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python27-x64"
      RUST_TARGET: "x86_64-pc-windows-msvc"
    - PYTHON: "C:\\Python33-x64"
      DISTUTILS_USE_SDK: "1"
      RUST_TARGET: "x86_64-pc-windows-msvc"
    - PYTHON: "C:\\Python34-x64"
      DISTUTILS_USE_SDK: "1"
      RUST_TARGET: "x86_64-pc-windows-msvc"
    - PYTHON: "C:\\Python35-x64"
      RUST_TARGET: "x86_64-pc-windows-msvc"

install:
  - "%PYTHON%\\python -m pip install -U pip setuptools wheel"
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-${env:RUST_TARGET}.exe"
  - rust-nightly-%RUST_TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - SET PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - SET PATH=%PATH%;C:\MinGW\bin

build_script:
  - ".build.cmd %PYTHON%\\python -m pip install cffi pytest"
    # We build the shared library outside of setuptools since we run into problems
    # with the %PATH% set by .build.cmd...
  - "cargo build --manifest-path fstwrapper/Cargo.toml --release"
  - ".build.cmd %PYTHON%\\python -m pip -v wheel . -w .\\wheelhouse"
  - dir wheelhouse

test_script:
  - SET PROJPATH=C:\Projects\python-rust-fst
  - cd c:\projects
  - "%PYTHON%\\python -m pip -v install rust_fst --no-index -f %PROJPATH%\\wheelhouse"
  - "%PYTHON%\\python -m pytest --verbose %PROJPATH%\\tests"

artifacts:
  - path: wheelhouse\rust_fst*.whl
