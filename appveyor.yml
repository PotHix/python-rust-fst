environment:
  matrix:
    - PYTHON: "C:\\Python27"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python33"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python34"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python35"
      RUST_TARGET: "i686-pc-windows-msvc"
    - PYTHON: "C:\\Python27-x64"
      RUST_TARGET: "x86_64-pc-windows-msvc"
    - PYTHON: "C:\\Python33-x64"
      DISTUTILS_USE_SDK: "1"
      RUST_TARGET: "x86_64-pc-windows-msvc"
    - PYTHON: "C:\\Python34-x64"
      DISTUTILS_USE_SDK: "1"
      RUST_TARGET: "x86_64-pc-windows-msvc"
    - PYTHON: "C:\\Python35-x64"
      RUST_TARGET: "x86_64-pc-windows-msvc"

install:
    # Install Python dependencies
  - "%PYTHON%\\python.exe -m pip install -U pip setuptools distribute"
  - "%PYTHON%\\python.exe -m pip install -U wheel cffi pytest"
    # Install Rust
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-${env:RUST_TARGET}.exe"
  - rust-nightly-%RUST_TARGET%.exe /VERYSILENT /NORESTART /DIR="C:\Program Files (x86)\Rust"
  - SET PATH=%PATH%;C:\Program Files (x86)\Rust\bin
  - SET PATH=%PATH%;C:\MinGW\bin
  - rustc -V
  - cargo -V
  - cd c:\projects\python-rust-fst
    # For some reason the binary wheel only gets built the second time we run this...
  - ".build.cmd %PYTHON%\\python setup.py bdist_wheel || echo 'First build step done...'"
    # Remove the bad wheel
  - del /s /q /f dist\*any.whl
    # Build the right wheel
  - ".build.cmd %PYTHON%\\python setup.py bdist_wheel"

build: off

test_script:
    # We have to be outside of the project directory for the tests
  - SET PROJPATH=C:\Projects\python-rust-fst
  - cd c:\projects
  - "%PROJPATH%\\.build.cmd %PYTHON%\\python -m pip install rust_fst --no-index -f %PROJPATH%\\dist"
  - "%PROJPATH%\\.build.cmd %PYTHON%\\python -m pytest %PROJPATH%\\tests"

artifacts:
  - path: dist\*
